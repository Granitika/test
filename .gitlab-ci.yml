# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
include:
  - template: Jobs/Secret-Detection.gitlab-ci.yml
  - template: Jobs/SAST.gitlab-ci.yml
  - template: Jobs/Container-Scanning.gitlab-ci.yml
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml



stages:
- pre-build  
- build
- test
- report


secret_detection:
  stage: pre-build
  variables:
    SECRET_DETECTION_HISTORIV_SCAN: "true"
    GIT_STARTEGY: "clone"
    CI_DEBUG_TRACE: "true"
  allow_failure: true
  script:
    - apk add jq
    - /analyzer run
    - exit $(eval "cat gl-secret-detection-report.json | jq --raw-output '.vulnerabilities | length'")
  artifacts:
    when: always
    paths:
      - gl-secret-detection-report.json

sast:
  stage: pre-build
  after_script:
    - mv gl-sast-report.json ${CI_JOB_NAME}.json
  variables:
    SCAN_KUBERNETES_MANIFESTS: "true"
    KUBESEC_HELM_CHARTS_PATH: "./k8s/"
  artifacts:
    when: always
    paths:
      - ${CI_JOB_NAME}.json

build_image:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.14.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Multi-stage.dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:latest"
      # --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"

container_scanning:
  variables:
    CS_IMAGE: "${CI_REGISTRY_IMAGE}:latest"


dependency_scanning:
  artifacts:
    when: always
    paths:
      - gl-dependency-scanning-report.json
      - gl-sbom-go-go.cdx.json
